import { EmailTemplate } from "@/email/EmailTemplate";
import { Resend } from "resend";
import { NextRequest, NextResponse } from "next/server";

const resend = new Resend(process.env.RESEND_API_KEY);
const fromEmail = process.env.HOST_EMAIL || "";

interface ResendError extends Error {
  statusCode?: number;
}

export async function POST(req: NextRequest) {
  const { name, email, subject, message, copy } = await req.json();

  if (!message || !email || !name || !subject) {
    return NextResponse.json(
      { error: "Missing required fields" },
      { status: 400 }
    );
  }

  try {
    const emailData = {
      from: "Acme <onboarding@resend.dev>",
      to: fromEmail,
      cc: email,
      subject: "Message from Personal Website",
      react: await EmailTemplate({ name, email, message, subject }),
    };

    console.log("Sending email with data:", emailData);

    const { data, error } = await resend.emails.send(emailData);

    if (error) {
      console.log("error", error.message);
      return NextResponse.json(
        { error: error.message },
        { status: (error as ResendError).statusCode }
      );
    }
    console.log("copy value: ", copy);

    return NextResponse.json({ data });
  } catch (error) {
    return NextResponse.json({ error }, { status: 500 });
  }
}
